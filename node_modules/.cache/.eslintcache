[{"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/index.js":"1","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/App.js":"2","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/navbar/NavBar.js":"3","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/loadFiles/LoadFiles.js":"4","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/alertError/AlertError.js":"5","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/common/DifferencesFunctions.js":"6"},{"size":283,"mtime":1629561738804,"results":"7","hashOfConfig":"8"},{"size":1669,"mtime":1629926626278,"results":"9","hashOfConfig":"8"},{"size":199,"mtime":1629561738803,"results":"10","hashOfConfig":"8"},{"size":2627,"mtime":1629644431164,"results":"11","hashOfConfig":"8"},{"size":359,"mtime":1629641354576,"results":"12","hashOfConfig":"8"},{"size":2747,"mtime":1629926628804,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"u6rcdb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/index.js",[],["28","29"],"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/App.js",[],"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/navbar/NavBar.js",[],"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/loadFiles/LoadFiles.js",["30"],"import React, {useCallback, useMemo, useState} from 'react';\nimport AlertError from '../alertError/AlertError';\nimport {useDropzone} from 'react-dropzone';\nimport XMLViewer from 'react-xml-viewer';\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n  \n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  \n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  \n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\n\nfunction LoadFiles(props) {\n    const [pomContent, setPomContent] = useState(\"\");\n    const [showAlert, setShowAlert] = useState(false);\n    const [fileName, setFileName] = useState(\"\");\n\n    const onDrop = useCallback((acceptedFiles,fileRejections) => {\n        acceptedFiles.forEach((file) => {\n          const reader = new FileReader();\n          reader.onabort = () => console.log('file reading was aborted');\n          reader.onerror = () => console.log('file reading has failed');\n          reader.onload = () => {\n            setPomContent(reader.result);\n            props.updatePom(reader.result);\n          }\n          reader.readAsText(file);\n          setShowAlert(false);\n        });\n\n        fileRejections.forEach((fileRejected) => {\n          props.updatePom(\"\");\n          setFileName(fileRejected.file.name);\n          setShowAlert(true);\n        });\n        \n      }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: '.xml', onDrop\n  });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n  \n  const customTheme = {\n    \"overflowBreak\":\"true\"\n  }\n\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({style})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        <em>(Only *.xml files will be accepted)</em>\n      </div>\n      {showAlert && <AlertError fileName={fileName}/>}\n      <aside>\n        <h4>File content:</h4>\n        {!showAlert \n          && pomContent.length>0 \n          && <XMLViewer xml={pomContent} collapsible={true} theme={customTheme}/>}\n      </aside>\n    </div>\n  );\n}\nexport default LoadFiles;","/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/components/alertError/AlertError.js",[],"/Users/jaime/Desktop/TFM/Proyecto/pomcompare/src/common/DifferencesFunctions.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":58,"column":10,"nodeType":"37","endLine":58,"endColumn":12,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [props]",{"range":"44","text":"45"},[1612,1614],"[props]"]